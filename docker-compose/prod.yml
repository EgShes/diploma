services:
  db:
    image: postgres
    env_file:
      - envs/prod
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      timeout: 45s
      interval: 10s
      retries: 10
    volumes:
      - postgres_data_diploma:/var/lib/postgresql/data

  queue:
    image: rabbitmq:3.9-alpine
    env_file:
      - envs/prod
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  app:
    build:
      context: ..
      dockerfile: docker-compose/dockerfiles/AppDockerfile
      target: prod
    env_file:
      - envs/prod
    depends_on:
      db:
        condition: service_healthy

  ner:
    build:
      context: ..
      dockerfile: docker-compose/dockerfiles/NerDockerfile
      target: prod
    env_file:
      - envs/prod
    depends_on:
      db:
        condition: service_healthy
      queue:
        condition: service_healthy

  words:
    build:
      context: ..
      dockerfile: docker-compose/dockerfiles/WordsDockerfile
      target: prod
    env_file:
      - envs/prod
    depends_on:
      db:
        condition: service_healthy
      queue:
        condition: service_healthy

  sentiment:
    build:
      context: ..
      dockerfile: docker-compose/dockerfiles/SentimentDockerfile
      target: prod
    env_file:
      - envs/prod
    depends_on:
      db:
        condition: service_healthy
      queue:
        condition: service_healthy

volumes:
  postgres_data_diploma:
