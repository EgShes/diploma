services:
  db:
    image: postgres
    env_file:
      - envs/prod
    healthcheck:
      test: pg_isready -q -U $$POSTGRES_USER
      interval: 1s
      timeout: 3s
      retries: 30
    volumes:
      - postgres_data_diploma:/var/lib/postgresql/data

  queue:
    image: rabbitmq:3.9.12-alpine
    user: rabbitmq
    env_file:
      - envs/prod
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 3s
      retries: 30

  app:
    build:
      context: ..
      dockerfile: docker-compose/dockerfiles/AppDockerfile
      target: prod
    env_file:
      - envs/prod
    depends_on:
      db:
        condition: service_healthy

  ner:
    build:
      context: ..
      dockerfile: docker-compose/dockerfiles/NerDockerfile
      target: prod
    env_file:
      - envs/prod
    depends_on:
      db:
        condition: service_healthy
      queue:
        condition: service_healthy

  words:
    build:
      context: ..
      dockerfile: docker-compose/dockerfiles/WordsDockerfile
      target: prod
    env_file:
      - envs/prod
    depends_on:
      db:
        condition: service_healthy
      queue:
        condition: service_healthy

  sentiment:
    build:
      context: ..
      dockerfile: docker-compose/dockerfiles/SentimentDockerfile
      target: prod
    env_file:
      - envs/prod
    depends_on:
      db:
        condition: service_healthy
      queue:
        condition: service_healthy

  dispatcher:
    build:
      context: ..
      dockerfile: docker-compose/dockerfiles/DispatcherDockerfile
      target: prod
    env_file:
      - envs/prod
    depends_on:
      - ner
      - words
      - sentiment

  analyze_app:
    build:
      context: ..
      dockerfile: docker-compose/dockerfiles/AnalyzeAppDockerfile
      target: prod
    ports:
      - 8501:8501
    env_file:
      - envs/prod
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data_diploma:
